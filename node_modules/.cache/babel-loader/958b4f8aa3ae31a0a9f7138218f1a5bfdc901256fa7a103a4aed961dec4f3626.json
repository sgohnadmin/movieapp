{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bighe\\\\react-101\\\\navapi\\\\src\\\\components\\\\MovieView.js\",\n  _s = $RefreshSig$();\nimport Hero from \"./Hero\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieView = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=ab166ff82684910ae3565621aea04d62&language=en-US`).then(response => response.json()).then(data => {\n      setMovieDetails(data);\n      setIsLoading(false);\n    });\n  }, [id]);\n  function renderMovieDetails() {\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(Hero, {\n        text: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    }\n    if (movieDetails) {\n      const posterPath = `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`;\n      const backdropUrl = `https://image.tmdb.org/t/p/original${movieDetails.backdrop_path}`;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Hero, {\n          text: movieDetails.original_title,\n          backdrop: backdropUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container my-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: posterPath,\n                alt: \"...\",\n                className: \"img-fluid shadow rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-9\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: movieDetails.original_title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"lead\",\n                children: movieDetails.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  }\n  return renderMovieDetails();\n};\n_s(MovieView, \"XV5Vu2nD/5RjmajabXuxoHTIsqg=\", false, function () {\n  return [useParams];\n});\n_c = MovieView;\nexport default MovieView;\nvar _c;\n$RefreshReg$(_c, \"MovieView\");","map":{"version":3,"names":["Hero","useParams","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieView","_s","id","movieDetails","setMovieDetails","isLoading","setIsLoading","fetch","then","response","json","data","renderMovieDetails","text","fileName","_jsxFileName","lineNumber","columnNumber","posterPath","poster_path","backdropUrl","backdrop_path","children","original_title","backdrop","className","src","alt","overview","_c","$RefreshReg$"],"sources":["C:/Users/bighe/react-101/navapi/src/components/MovieView.js"],"sourcesContent":["import Hero from \"./Hero\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\n\nconst MovieView = () => {\n  const { id } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=ab166ff82684910ae3565621aea04d62&language=en-US`\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setMovieDetails(data);\n        setIsLoading(false);\n      });\n  }, [id]);\n\n  function renderMovieDetails() {\n    if (isLoading) {\n      return <Hero text=\"Loading...\" />;\n    }\n    if (movieDetails) {\n      const posterPath = `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`;\n      const backdropUrl = `https://image.tmdb.org/t/p/original${movieDetails.backdrop_path}`\n      return (\n        <>\n          <Hero text={movieDetails.original_title} backdrop={backdropUrl} />\n          <div className=\"container my-5\">\n            <div className=\"row\">\n              <div className=\"col-md-3\">\n                <img\n                  src={posterPath}\n                  alt=\"...\"\n                  className=\"img-fluid shadow rounded\"\n                />\n              </div>\n              <div className=\"col-md-9\">\n                <h2>{movieDetails.original_title}</h2>\n                <p className=\"lead\">{movieDetails.overview}</p>\n              </div>\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n\n  return renderMovieDetails();\n};\n\nexport default MovieView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}