"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const remove_trailing_slash_1 = __importDefault(require("remove-trailing-slash"));
const ApiRequest_1 = __importDefault(require("./services/ApiRequest/ApiRequest"));
const ApiKeys_1 = __importDefault(require("./endpoints/ApiKeys/ApiKeys"));
const HttpMethod_1 = require("./services/ApiRequest/HttpMethod");
const Projects_1 = __importDefault(require("./endpoints/Projects/Projects"));
const Accounts_1 = __importDefault(require("./endpoints/Accounts/Accounts"));
// eslint-disable-next-line @typescript-eslint/no-empty-function
const noop = () => { };
class TheAuthAPI {
    /**
     * @param {String} accessKey
     * @param {Object} [options] (optional)
     *   @property {String} host (default: 'https://api.segment.io')
     *   @property {number} retryCount (default: 3)
     */
    constructor(accessKey, options) {
        var _a;
        (0, assert_1.default)(accessKey, "You must pass your project's write key.");
        this.accessKey = accessKey;
        this.host = (0, remove_trailing_slash_1.default)((options === null || options === void 0 ? void 0 : options.host) || "https://api.theauthapi.com");
        this.api = new ApiRequest_1.default({
            accessKey: this.accessKey,
            host: this.host,
            retryCount: (_a = options === null || options === void 0 ? void 0 : options.retryCount) !== null && _a !== void 0 ? _a : 3,
        });
        this.apiKeys = new ApiKeys_1.default(this.api);
        this.projects = new Projects_1.default(this.api);
        this.accounts = new Accounts_1.default(this.api);
    }
    /*
      @deprecated
     */
    authenticateAPIKey(key, callback) {
        return __awaiter(this, void 0, void 0, function* () {
            const cb = callback || noop;
            const done = (err) => {
                cb(err, data);
            };
            const data = {
                credentials: { api_key: key },
                timestamp: new Date().getTime(),
                sentAt: new Date().getTime(),
            };
            try {
                const key = yield this.api.request(HttpMethod_1.HttpMethod.POST, "/auth/authenticate", data);
                done(key);
                return key;
            }
            catch (err) {
                if (err.response) {
                    const error = new Error(err.response.statusText);
                    return done(error);
                }
                done(err);
            }
        });
    }
}
exports.default = TheAuthAPI;
